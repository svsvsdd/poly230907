import cv2
import numpy as np
from shapely.geometry import Polygon
from gpiozero import AngularServo

# 서보모터 제어 함수
def control_submotor(angle):
    # 서보모터를 해당 각도로 제어하는 코드 작성
    servo.angle = angle

# 서보모터 초기화
servo = AngularServo(17, min_angle=-90, max_angle=90)

cap = cv2.VideoCapture(0)

cap.set(cv2.CAP_PROP_FRAME_WIDTH, 500)
cap.set(cv2.CAP_PROP_FRAME_HEIGHT, 500)

face_cascade = cv2.CascadeClassifier('haarcascade_frontalface_default.xml')
eye_cascade = cv2.CascadeClassifier('haarcascade_eye.xml')

while True:
    ret, frame = cap.read()
    hsv = cv2.cvtColor(frame, cv2.COLOR_BGR2HSV)
    # define range of blue color in HSV
    lower = np.array([0, 40, 80])
    upper = np.array([20, 255, 255])
    # Threshold the HSV image to get only blue colors
    mask = cv2.inRange(hsv, lower, upper)
    mask = cv2.blur(mask, (5, 5))
    _, contours, hierarchy = cv2.findContours(mask, cv2.RETR_TREE, cv2.CHAIN_APPROX_SIMPLE)
    contour_areas = [cv2.contourArea(cnt) for cnt in contours]
    max_contour_index = np.argmax(contour_areas)
    max_contour = contours[max_contour_index]
    cv2.drawContours(frame, [max_contour], -1, (0, 255, 0), 2)
    
    count = 0
    operationStart = 0
    text = None
    hull = cv2.convexHull(max_contour, returnPoints=False)
    defects = cv2.convexityDefects(max_contour, hull)
    
    if defects is not None:
        print("son 검출 시작")
        for i in range(defects.shape[0]):
            s, e, f, d = defects[i, 0]
            start = tuple(max_contour[s][0])
            end = tuple(max_contour[e][0])
            far = tuple(max_contour[f][0])
            cv2.line(frame, start, end, [255, 0, 0], 2)
            cv2.circle(frame, far, 5, [0, 0, 255], -1)
            if d > 16000:
                count = count + 1
    
    if count > 3:
        text = "Start"
        operationStart = 1

        count = 0
        defects = None
        
    else:
        count = 0

    if text is not None:
        cv2.putText(frame, text, (10, 30), cv2.FONT_HERSHEY_SIMPLEX, 1, (0, 0, 255), 2)


    # 얼굴 검출 로직 추가
    if operationStart == 1:
        print("얼굴 검출 시작")
        gray = cv2.cvtColor(frame, cv2.COLOR_BGR2GRAY)
        height, width = frame.shape[:2]
        center_x = width // 2  # 화면 중심 x 좌표

        faces = face_cascade.detectMultiScale(gray, 1.3, 5)
        for (x, y, w, h) in faces:
            # 얼굴의 중심 x 좌표 계산
            face_center_x = x + (w // 2)

            # 화면 중심과 얼굴 중심의 차이 계산
            diff_x = face_center_x - center_x
            threshold = 30

            # 일정 범위 이상 벗어난 경우 서보모터 제어
            if abs(diff_x) > threshold:
                angle = (diff_x / center_x) * (90)  # 각도 계산 함수 호출
                angle = int(angle)
                control_submotor(angle)  # 서보모터 제어 함수 호출
        operationStart = 0
        
    cv2.imshow('frame', frame)

    k = cv2.waitKey(5) & 0xFF
    if k == 27:
        break

cap.release()
cv2.destroyAllWindows()

